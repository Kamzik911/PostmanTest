{
	"info": {
		"_postman_id": "8e159545-4a62-4553-8194-d244c76bd993",
		"name": "List of users",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Get users",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "657736b7-d4f8-4511-a553-ac2eab86de1e",
						"exec": [
							"console.clear();"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "bb083ce3-d116-48f7-9bd1-52d934daa6dc",
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"getStatus200 = function() {\r",
							"\tpm.expect(pm.response.code).to.equal(200);\r",
							"}\r",
							"\r",
							"pageIsNumber = function () {\r",
							"\tpm.expect(response.page).to.be.a('number');\r",
							"}\r",
							"\r",
							"totalPagesIs2 = function () {\r",
							"\tpm.expect(response.total_pages).to.be.eql(2);\r",
							"}\r",
							"\r",
							"GetUsersPage1 = function () {\r",
							"\tpm.expect(response.page).to.be.eql(1);\r",
							"}\r",
							"\r",
							"assertDataId = function () {\r",
							"\tpm.expect(response.id).to.a('number');\r",
							"};\r",
							"\r",
							"assertDataEmail = function () {\r",
							"    pm.expect(response.email).to.a('string');\r",
							"}\r",
							"\r",
							"//Tests\r",
							"pm.test(\"Status 200\", {getStatus200})\r",
							"pm.test(\"Page is defined number\"), {pageIsNumber};\r",
							"pm.test(\"Total number of pages is 2\"), {totalPagesIs2};\r",
							"pm.test (\"Get users page one\", {GetUsersPage1})\r",
							"pm.test(\"Assert ID is number\", {assertDataId});\r",
							"pm.test(\"Assert email is string\", {assertDataEmail});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "63e1512f-fe39-4292-a9e1-543e7c4b6dfe",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}api/users?page=1",
					"host": [
						"{{baseUrl}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get single user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "e57ceea4-a233-4ef0-8d53-52abcd9407f9",
						"exec": [
							"console.clear();"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "607d35dd-8339-4d11-95d8-ca4319887850",
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"getNumber = function (){\r",
							"    pm.collectionVariables.set('UserId', response.data.id)};\r",
							"\r",
							"getStatus200 = function(){\r",
							"    pm.response.to.have.status(200);\r",
							"};\r",
							"\r",
							"propertyDataAssert = function() {\r",
							"    pm.expect(response.data.id).to.be.a('number');\r",
							"    pm.expect(response.data.id).to.be.greaterThan(1);\r",
							"    pm.expect(response.data.email).to.include('@');\r",
							"    pm.expect(response.data.email).to.have.a('string');\r",
							"    pm.expect(response.data.first_name).to.have.a('string');\r",
							"    pm.expect(response.data.last_name).to.have.a('string');\r",
							"    pm.expect(response.data.avatar).to.include('https://');\r",
							"    pm.expect(response.data.avatar).to.be.a('string');\r",
							"}\r",
							"\r",
							"pm.test(\"Get status 200\", getStatus200);\r",
							"pm.test(\"Assert data property\", propertyDataAssert);\r",
							"pm.test(\"Set UserId ok\", getNumber());"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "b40349d4-eb79-4cd7-b76d-ff1b9a2da0e6",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseUrl}}api/users/2"
			},
			"response": []
		},
		{
			"name": "Single user not found",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "37d78620-8977-4dda-be25-e08a7e7d17d4",
						"exec": [
							"console.clear()"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "06435cd4-5e3c-4dca-a6ea-9536addd8adb",
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"statusIs404 = function() {\r",
							"    pm.response.to.have.status(404);\r",
							"}\r",
							"\r",
							"pm.test('Status is 404', statusIs404);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "c7684adc-40d7-40d2-97ce-aec32a8e051e",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "{{baseUrl}}api/users/23"
			},
			"response": []
		},
		{
			"name": "Create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "24ce5d0c-ac4c-465c-bf30-1cda48f6ecd7",
						"exec": [
							"console.clear();"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5ac7d1bf-ac50-42d4-aa4c-a31984fdcc78",
						"exec": [
							"const response = pm.response.json();\r",
							"\r",
							"setUserNameVariables = function() {\r",
							"\tpm.collectionVariables.set('randomFullName', response.name);\r",
							"}\r",
							"\r",
							"setUserJobVariables = function() {\r",
							"\tpm.collectionVariables.set('randomJob', response.job);\r",
							"}\r",
							"\r",
							"nameIsString = function() {\r",
							"\tpm.expect(response.name).to.be.a('string');\r",
							"}\r",
							"\r",
							"pm.test('User name is set to variables', setUserNameVariables);\r",
							"pm.test('User job is set to variables', setUserJobVariables);\r",
							"pm.test('User name is a string', nameIsString);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"id": "ea998ec0-f324-47e1-80cc-823965579dc4",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"name\": \"{{$randomFullName}}\",\r\n\t\"job\": \"{{$randomJobTitle}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{baseUrl}}api/users"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "42a8c0a4-5a23-4973-9cc1-013d26554f1d",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "d7e2080b-6a81-4ff5-9a73-ff19803a5733",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://reqres.in/",
			"type": "string"
		},
		{
			"key": "UserId",
			"value": ""
		},
		{
			"key": "randomFullName",
			"value": "",
			"type": "string"
		},
		{
			"key": "randomJob",
			"value": "",
			"type": "string"
		},
		{
			"key": "customerName",
			"value": ""
		}
	]
}